#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace encuestaTron.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="etTempDB")]
	public partial class dbModel : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertbitacora(encuestaTron.bitacora instance);
    partial void Updatebitacora(encuestaTron.bitacora instance);
    partial void Deletebitacora(encuestaTron.bitacora instance);
    partial void Insertusuario(encuestaTron.usuario instance);
    partial void Updateusuario(encuestaTron.usuario instance);
    partial void Deleteusuario(encuestaTron.usuario instance);
    partial void Insertcliente(encuestaTron.cliente instance);
    partial void Updatecliente(encuestaTron.cliente instance);
    partial void Deletecliente(encuestaTron.cliente instance);
    partial void Insertencuesta(encuestaTron.encuesta instance);
    partial void Updateencuesta(encuestaTron.encuesta instance);
    partial void Deleteencuesta(encuestaTron.encuesta instance);
    partial void Insertpregunta(encuestaTron.pregunta instance);
    partial void Updatepregunta(encuestaTron.pregunta instance);
    partial void Deletepregunta(encuestaTron.pregunta instance);
    partial void Insertrespuesta(encuestaTron.respuesta instance);
    partial void Updaterespuesta(encuestaTron.respuesta instance);
    partial void Deleterespuesta(encuestaTron.respuesta instance);
    partial void Insertrol(encuestaTron.rol instance);
    partial void Updaterol(encuestaTron.rol instance);
    partial void Deleterol(encuestaTron.rol instance);
    #endregion
		
		public dbModel() : 
				base(global::DataTypesObjects.Properties.Settings.Default.etTempDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbModel(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbModel(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbModel(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbModel(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<encuestaTron.bitacora> bitacoras
		{
			get
			{
				return this.GetTable<encuestaTron.bitacora>();
			}
		}
		
		public System.Data.Linq.Table<encuestaTron.usuario> usuarios
		{
			get
			{
				return this.GetTable<encuestaTron.usuario>();
			}
		}
		
		public System.Data.Linq.Table<encuestaTron.cliente> clientes
		{
			get
			{
				return this.GetTable<encuestaTron.cliente>();
			}
		}
		
		public System.Data.Linq.Table<encuestaTron.encuesta> encuestas
		{
			get
			{
				return this.GetTable<encuestaTron.encuesta>();
			}
		}
		
		public System.Data.Linq.Table<encuestaTron.pregunta> preguntas
		{
			get
			{
				return this.GetTable<encuestaTron.pregunta>();
			}
		}
		
		public System.Data.Linq.Table<encuestaTron.respuesta> respuestas
		{
			get
			{
				return this.GetTable<encuestaTron.respuesta>();
			}
		}
		
		public System.Data.Linq.Table<encuestaTron.rol> rols
		{
			get
			{
				return this.GetTable<encuestaTron.rol>();
			}
		}
	}
}
namespace encuestaTron
{
	using System.Runtime.Serialization;
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[Table(Name="dbo.bitacora")]
	[DataContract()]
	public partial class bitacora : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_Log;
		
		private System.DateTime _fecha_Log;
		
		private string _usuario_Log;
		
		private string _descripcion_Log;
		
		private string _severidad_Log;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_LogChanging(int value);
    partial void Onid_LogChanged();
    partial void Onfecha_LogChanging(System.DateTime value);
    partial void Onfecha_LogChanged();
    partial void Onusuario_LogChanging(string value);
    partial void Onusuario_LogChanged();
    partial void Ondescripcion_LogChanging(string value);
    partial void Ondescripcion_LogChanged();
    partial void Onseveridad_LogChanging(string value);
    partial void Onseveridad_LogChanged();
    #endregion
		
		public bitacora()
		{
			this.Initialize();
		}
		
		[Column(Storage="_id_Log", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[DataMember(Order=1)]
		public int id_Log
		{
			get
			{
				return this._id_Log;
			}
			set
			{
				if ((this._id_Log != value))
				{
					this.Onid_LogChanging(value);
					this.SendPropertyChanging();
					this._id_Log = value;
					this.SendPropertyChanged("id_Log");
					this.Onid_LogChanged();
				}
			}
		}
		
		[Column(Storage="_fecha_Log", DbType="DateTime NOT NULL")]
		[DataMember(Order=2)]
		public System.DateTime fecha_Log
		{
			get
			{
				return this._fecha_Log;
			}
			set
			{
				if ((this._fecha_Log != value))
				{
					this.Onfecha_LogChanging(value);
					this.SendPropertyChanging();
					this._fecha_Log = value;
					this.SendPropertyChanged("fecha_Log");
					this.Onfecha_LogChanged();
				}
			}
		}
		
		[Column(Storage="_usuario_Log", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string usuario_Log
		{
			get
			{
				return this._usuario_Log;
			}
			set
			{
				if ((this._usuario_Log != value))
				{
					this.Onusuario_LogChanging(value);
					this.SendPropertyChanging();
					this._usuario_Log = value;
					this.SendPropertyChanged("usuario_Log");
					this.Onusuario_LogChanged();
				}
			}
		}
		
		[Column(Storage="_descripcion_Log", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string descripcion_Log
		{
			get
			{
				return this._descripcion_Log;
			}
			set
			{
				if ((this._descripcion_Log != value))
				{
					this.Ondescripcion_LogChanging(value);
					this.SendPropertyChanging();
					this._descripcion_Log = value;
					this.SendPropertyChanged("descripcion_Log");
					this.Ondescripcion_LogChanged();
				}
			}
		}
		
		[Column(Storage="_severidad_Log", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string severidad_Log
		{
			get
			{
				return this._severidad_Log;
			}
			set
			{
				if ((this._severidad_Log != value))
				{
					this.Onseveridad_LogChanging(value);
					this.SendPropertyChanging();
					this._severidad_Log = value;
					this.SendPropertyChanged("severidad_Log");
					this.Onseveridad_LogChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.usuario")]
	[DataContract()]
	public partial class usuario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _nombre;
		
		private string _email;
		
		private string _id_usuario;
		
		private string _contrasena;
		
		private string _celular;
		
		private string _telefono;
		
		private System.Nullable<System.DateTime> _f_ingreso;
		
		private System.Nullable<int> _id_rol;
		
		private EntitySet<cliente> _clientes;
		
		private EntityRef<rol> _rol;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onid_usuarioChanging(string value);
    partial void Onid_usuarioChanged();
    partial void OncontrasenaChanging(string value);
    partial void OncontrasenaChanged();
    partial void OncelularChanging(string value);
    partial void OncelularChanged();
    partial void OntelefonoChanging(string value);
    partial void OntelefonoChanged();
    partial void Onf_ingresoChanging(System.Nullable<System.DateTime> value);
    partial void Onf_ingresoChanged();
    partial void Onid_rolChanging(System.Nullable<int> value);
    partial void Onid_rolChanged();
    #endregion
		
		public usuario()
		{
			this.Initialize();
		}
		
		[Column(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=1)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[Column(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[Column(Storage="_id_usuario", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=3)]
		public string id_usuario
		{
			get
			{
				return this._id_usuario;
			}
			set
			{
				if ((this._id_usuario != value))
				{
					this.Onid_usuarioChanging(value);
					this.SendPropertyChanging();
					this._id_usuario = value;
					this.SendPropertyChanged("id_usuario");
					this.Onid_usuarioChanged();
				}
			}
		}
		
		[Column(Storage="_contrasena", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[DataMember(Order=4)]
		public string contrasena
		{
			get
			{
				return this._contrasena;
			}
			set
			{
				if ((this._contrasena != value))
				{
					this.OncontrasenaChanging(value);
					this.SendPropertyChanging();
					this._contrasena = value;
					this.SendPropertyChanged("contrasena");
					this.OncontrasenaChanged();
				}
			}
		}
		
		[Column(Storage="_celular", DbType="VarChar(50)")]
		[DataMember(Order=5)]
		public string celular
		{
			get
			{
				return this._celular;
			}
			set
			{
				if ((this._celular != value))
				{
					this.OncelularChanging(value);
					this.SendPropertyChanging();
					this._celular = value;
					this.SendPropertyChanged("celular");
					this.OncelularChanged();
				}
			}
		}
		
		[Column(Storage="_telefono", DbType="VarChar(50)")]
		[DataMember(Order=6)]
		public string telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[Column(Storage="_f_ingreso", DbType="DateTime")]
		[DataMember(Order=7)]
		public System.Nullable<System.DateTime> f_ingreso
		{
			get
			{
				return this._f_ingreso;
			}
			set
			{
				if ((this._f_ingreso != value))
				{
					this.Onf_ingresoChanging(value);
					this.SendPropertyChanging();
					this._f_ingreso = value;
					this.SendPropertyChanged("f_ingreso");
					this.Onf_ingresoChanged();
				}
			}
		}
		
		[Column(Storage="_id_rol", DbType="Int")]
		[DataMember(Order=8)]
		public System.Nullable<int> id_rol
		{
			get
			{
				return this._id_rol;
			}
			set
			{
				if ((this._id_rol != value))
				{
					if (this._rol.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_rolChanging(value);
					this.SendPropertyChanging();
					this._id_rol = value;
					this.SendPropertyChanged("id_rol");
					this.Onid_rolChanged();
				}
			}
		}
		
		[Association(Name="usuario_cliente", Storage="_clientes", OtherKey="id_agente")]
		[DataMember(Order=9, EmitDefaultValue=false)]
		public EntitySet<cliente> clientes
		{
			get
			{
				if ((this.serializing 
							&& (this._clientes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._clientes;
			}
			set
			{
				this._clientes.Assign(value);
			}
		}
		
		[Association(Name="rol_usuario", Storage="_rol", ThisKey="id_rol", IsForeignKey=true)]
		public rol rol
		{
			get
			{
				return this._rol.Entity;
			}
			set
			{
				rol previousValue = this._rol.Entity;
				if (((previousValue != value) 
							|| (this._rol.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._rol.Entity = null;
						previousValue.usuarios.Remove(this);
					}
					this._rol.Entity = value;
					if ((value != null))
					{
						value.usuarios.Add(this);
						this._id_rol = value.id;
					}
					else
					{
						this._id_rol = default(Nullable<int>);
					}
					this.SendPropertyChanged("rol");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_clientes(cliente entity)
		{
			this.SendPropertyChanging();
			entity.usuario = this;
		}
		
		private void detach_clientes(cliente entity)
		{
			this.SendPropertyChanging();
			entity.usuario = null;
		}
		
		private void Initialize()
		{
			this._clientes = new EntitySet<cliente>(new Action<cliente>(this.attach_clientes), new Action<cliente>(this.detach_clientes));
			this._rol = default(EntityRef<rol>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.cliente")]
	[DataContract()]
	public partial class cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_usuario;
		
		private string _id_agente;
		
		private EntityRef<cliente> _cliente2;
		
		private EntitySet<encuesta> _encuestas;
		
		private EntityRef<usuario> _usuario;
		
		private EntityRef<cliente> _cliente1;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_usuarioChanging(string value);
    partial void Onid_usuarioChanged();
    partial void Onid_agenteChanging(string value);
    partial void Onid_agenteChanged();
    #endregion
		
		public cliente()
		{
			this.Initialize();
		}
		
		[Column(Storage="_id_usuario", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string id_usuario
		{
			get
			{
				return this._id_usuario;
			}
			set
			{
				if ((this._id_usuario != value))
				{
					if (this._cliente1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_usuarioChanging(value);
					this.SendPropertyChanging();
					this._id_usuario = value;
					this.SendPropertyChanged("id_usuario");
					this.Onid_usuarioChanged();
				}
			}
		}
		
		[Column(Storage="_id_agente", DbType="VarChar(50)")]
		[DataMember(Order=2)]
		public string id_agente
		{
			get
			{
				return this._id_agente;
			}
			set
			{
				if ((this._id_agente != value))
				{
					if (this._usuario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_agenteChanging(value);
					this.SendPropertyChanging();
					this._id_agente = value;
					this.SendPropertyChanged("id_agente");
					this.Onid_agenteChanged();
				}
			}
		}
		
		[Association(Name="cliente_cliente", Storage="_cliente2", ThisKey="id_usuario", IsUnique=true, IsForeignKey=false)]
		[DataMember(Order=3, EmitDefaultValue=false)]
		public cliente cliente2
		{
			get
			{
				if ((this.serializing 
							&& (this._cliente2.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._cliente2.Entity;
			}
			set
			{
				cliente previousValue = this._cliente2.Entity;
				if (((previousValue != value) 
							|| (this._cliente2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cliente2.Entity = null;
						previousValue.cliente1 = null;
					}
					this._cliente2.Entity = value;
					if ((value != null))
					{
						value.cliente1 = this;
					}
					this.SendPropertyChanged("cliente2");
				}
			}
		}
		
		[Association(Name="cliente_encuesta", Storage="_encuestas", OtherKey="id_cliente")]
		[DataMember(Order=4, EmitDefaultValue=false)]
		public EntitySet<encuesta> encuestas
		{
			get
			{
				if ((this.serializing 
							&& (this._encuestas.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._encuestas;
			}
			set
			{
				this._encuestas.Assign(value);
			}
		}
		
		[Association(Name="usuario_cliente", Storage="_usuario", ThisKey="id_agente", IsForeignKey=true, DeleteRule="CASCADE")]
		public usuario usuario
		{
			get
			{
				return this._usuario.Entity;
			}
			set
			{
				usuario previousValue = this._usuario.Entity;
				if (((previousValue != value) 
							|| (this._usuario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._usuario.Entity = null;
						previousValue.clientes.Remove(this);
					}
					this._usuario.Entity = value;
					if ((value != null))
					{
						value.clientes.Add(this);
						this._id_agente = value.id_usuario;
					}
					else
					{
						this._id_agente = default(string);
					}
					this.SendPropertyChanged("usuario");
				}
			}
		}
		
		[Association(Name="cliente_cliente", Storage="_cliente1", ThisKey="id_usuario", IsForeignKey=true)]
		public cliente cliente1
		{
			get
			{
				return this._cliente1.Entity;
			}
			set
			{
				cliente previousValue = this._cliente1.Entity;
				if (((previousValue != value) 
							|| (this._cliente1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cliente1.Entity = null;
						previousValue.cliente2 = null;
					}
					this._cliente1.Entity = value;
					if ((value != null))
					{
						value.cliente2 = this;
						this._id_usuario = value.id_usuario;
					}
					else
					{
						this._id_usuario = default(string);
					}
					this.SendPropertyChanged("cliente1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_encuestas(encuesta entity)
		{
			this.SendPropertyChanging();
			entity.cliente = this;
		}
		
		private void detach_encuestas(encuesta entity)
		{
			this.SendPropertyChanging();
			entity.cliente = null;
		}
		
		private void Initialize()
		{
			this._cliente2 = default(EntityRef<cliente>);
			this._encuestas = new EntitySet<encuesta>(new Action<encuesta>(this.attach_encuestas), new Action<encuesta>(this.detach_encuestas));
			this._usuario = default(EntityRef<usuario>);
			this._cliente1 = default(EntityRef<cliente>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.encuesta")]
	[DataContract()]
	public partial class encuesta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _nombre;
		
		private string _contrasena;
		
		private System.DateTime _f_ingreso;
		
		private System.Nullable<System.DateTime> _f_modificacion;
		
		private System.Nullable<System.DateTime> _f_vigencia;
		
		private System.Nullable<System.DateTime> _f_cierre;
		
		private string _id_cliente;
		
		private EntitySet<pregunta> _preguntas;
		
		private EntityRef<cliente> _cliente;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OncontrasenaChanging(string value);
    partial void OncontrasenaChanged();
    partial void Onf_ingresoChanging(System.DateTime value);
    partial void Onf_ingresoChanged();
    partial void Onf_modificacionChanging(System.Nullable<System.DateTime> value);
    partial void Onf_modificacionChanged();
    partial void Onf_vigenciaChanging(System.Nullable<System.DateTime> value);
    partial void Onf_vigenciaChanged();
    partial void Onf_cierreChanging(System.Nullable<System.DateTime> value);
    partial void Onf_cierreChanged();
    partial void Onid_clienteChanging(string value);
    partial void Onid_clienteChanged();
    #endregion
		
		public encuesta()
		{
			this.Initialize();
		}
		
		[Column(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[Column(Storage="_contrasena", DbType="NChar(255) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string contrasena
		{
			get
			{
				return this._contrasena;
			}
			set
			{
				if ((this._contrasena != value))
				{
					this.OncontrasenaChanging(value);
					this.SendPropertyChanging();
					this._contrasena = value;
					this.SendPropertyChanged("contrasena");
					this.OncontrasenaChanged();
				}
			}
		}
		
		[Column(Storage="_f_ingreso", DbType="DateTime NOT NULL")]
		[DataMember(Order=3)]
		public System.DateTime f_ingreso
		{
			get
			{
				return this._f_ingreso;
			}
			set
			{
				if ((this._f_ingreso != value))
				{
					this.Onf_ingresoChanging(value);
					this.SendPropertyChanging();
					this._f_ingreso = value;
					this.SendPropertyChanged("f_ingreso");
					this.Onf_ingresoChanged();
				}
			}
		}
		
		[Column(Storage="_f_modificacion", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> f_modificacion
		{
			get
			{
				return this._f_modificacion;
			}
			set
			{
				if ((this._f_modificacion != value))
				{
					this.Onf_modificacionChanging(value);
					this.SendPropertyChanging();
					this._f_modificacion = value;
					this.SendPropertyChanged("f_modificacion");
					this.Onf_modificacionChanged();
				}
			}
		}
		
		[Column(Storage="_f_vigencia", DbType="DateTime")]
		[DataMember(Order=5)]
		public System.Nullable<System.DateTime> f_vigencia
		{
			get
			{
				return this._f_vigencia;
			}
			set
			{
				if ((this._f_vigencia != value))
				{
					this.Onf_vigenciaChanging(value);
					this.SendPropertyChanging();
					this._f_vigencia = value;
					this.SendPropertyChanged("f_vigencia");
					this.Onf_vigenciaChanged();
				}
			}
		}
		
		[Column(Storage="_f_cierre", DbType="DateTime")]
		[DataMember(Order=6)]
		public System.Nullable<System.DateTime> f_cierre
		{
			get
			{
				return this._f_cierre;
			}
			set
			{
				if ((this._f_cierre != value))
				{
					this.Onf_cierreChanging(value);
					this.SendPropertyChanging();
					this._f_cierre = value;
					this.SendPropertyChanged("f_cierre");
					this.Onf_cierreChanged();
				}
			}
		}
		
		[Column(Storage="_id_cliente", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=7)]
		public string id_cliente
		{
			get
			{
				return this._id_cliente;
			}
			set
			{
				if ((this._id_cliente != value))
				{
					if (this._cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_clienteChanging(value);
					this.SendPropertyChanging();
					this._id_cliente = value;
					this.SendPropertyChanged("id_cliente");
					this.Onid_clienteChanged();
				}
			}
		}
		
		[Association(Name="encuesta_pregunta", Storage="_preguntas", OtherKey="id_encuesta")]
		[DataMember(Order=8, EmitDefaultValue=false)]
		public EntitySet<pregunta> preguntas
		{
			get
			{
				if ((this.serializing 
							&& (this._preguntas.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._preguntas;
			}
			set
			{
				this._preguntas.Assign(value);
			}
		}
		
		[Association(Name="cliente_encuesta", Storage="_cliente", ThisKey="id_cliente", IsForeignKey=true)]
		public cliente cliente
		{
			get
			{
				return this._cliente.Entity;
			}
			set
			{
				cliente previousValue = this._cliente.Entity;
				if (((previousValue != value) 
							|| (this._cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._cliente.Entity = null;
						previousValue.encuestas.Remove(this);
					}
					this._cliente.Entity = value;
					if ((value != null))
					{
						value.encuestas.Add(this);
						this._id_cliente = value.id_usuario;
					}
					else
					{
						this._id_cliente = default(string);
					}
					this.SendPropertyChanged("cliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_preguntas(pregunta entity)
		{
			this.SendPropertyChanging();
			entity.encuesta = this;
		}
		
		private void detach_preguntas(pregunta entity)
		{
			this.SendPropertyChanging();
			entity.encuesta = null;
		}
		
		private void Initialize()
		{
			this._preguntas = new EntitySet<pregunta>(new Action<pregunta>(this.attach_preguntas), new Action<pregunta>(this.detach_preguntas));
			this._cliente = default(EntityRef<cliente>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.pregunta")]
	[DataContract()]
	public partial class pregunta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _planteo;
		
		private string _condicion;
		
		private System.Nullable<System.DateTime> _f_ultima_respuesta;
		
		private string _id_encuesta;
		
		private System.Nullable<int> _nro_pregunta;
		
		private EntitySet<respuesta> _respuestas;
		
		private EntityRef<respuesta> _respuesta;
		
		private EntityRef<encuesta> _encuesta;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnplanteoChanging(string value);
    partial void OnplanteoChanged();
    partial void OncondicionChanging(string value);
    partial void OncondicionChanged();
    partial void Onf_ultima_respuestaChanging(System.Nullable<System.DateTime> value);
    partial void Onf_ultima_respuestaChanged();
    partial void Onid_encuestaChanging(string value);
    partial void Onid_encuestaChanged();
    partial void Onnro_preguntaChanging(System.Nullable<int> value);
    partial void Onnro_preguntaChanged();
    #endregion
		
		public pregunta()
		{
			this.Initialize();
		}
		
		[Column(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_planteo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string planteo
		{
			get
			{
				return this._planteo;
			}
			set
			{
				if ((this._planteo != value))
				{
					this.OnplanteoChanging(value);
					this.SendPropertyChanging();
					this._planteo = value;
					this.SendPropertyChanged("planteo");
					this.OnplanteoChanged();
				}
			}
		}
		
		[Column(Storage="_condicion", DbType="VarChar(50)")]
		[DataMember(Order=3)]
		public string condicion
		{
			get
			{
				return this._condicion;
			}
			set
			{
				if ((this._condicion != value))
				{
					this.OncondicionChanging(value);
					this.SendPropertyChanging();
					this._condicion = value;
					this.SendPropertyChanged("condicion");
					this.OncondicionChanged();
				}
			}
		}
		
		[Column(Storage="_f_ultima_respuesta", DbType="DateTime")]
		[DataMember(Order=4)]
		public System.Nullable<System.DateTime> f_ultima_respuesta
		{
			get
			{
				return this._f_ultima_respuesta;
			}
			set
			{
				if ((this._f_ultima_respuesta != value))
				{
					this.Onf_ultima_respuestaChanging(value);
					this.SendPropertyChanging();
					this._f_ultima_respuesta = value;
					this.SendPropertyChanged("f_ultima_respuesta");
					this.Onf_ultima_respuestaChanged();
				}
			}
		}
		
		[Column(Storage="_id_encuesta", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=5)]
		public string id_encuesta
		{
			get
			{
				return this._id_encuesta;
			}
			set
			{
				if ((this._id_encuesta != value))
				{
					if (this._encuesta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_encuestaChanging(value);
					this.SendPropertyChanging();
					this._id_encuesta = value;
					this.SendPropertyChanged("id_encuesta");
					this.Onid_encuestaChanged();
				}
			}
		}
		
		[Column(Storage="_nro_pregunta", DbType="Int")]
		[DataMember(Order=6)]
		public System.Nullable<int> nro_pregunta
		{
			get
			{
				return this._nro_pregunta;
			}
			set
			{
				if ((this._nro_pregunta != value))
				{
					this.Onnro_preguntaChanging(value);
					this.SendPropertyChanging();
					this._nro_pregunta = value;
					this.SendPropertyChanged("nro_pregunta");
					this.Onnro_preguntaChanged();
				}
			}
		}
		
		[Association(Name="pregunta_respuesta", Storage="_respuestas", OtherKey="id_pregunta")]
		[DataMember(Order=7, EmitDefaultValue=false)]
		public EntitySet<respuesta> respuestas
		{
			get
			{
				if ((this.serializing 
							&& (this._respuestas.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._respuestas;
			}
			set
			{
				this._respuestas.Assign(value);
			}
		}
		
		[Association(Name="pregunta_respuesta1", Storage="_respuesta", ThisKey="id", IsUnique=true, IsForeignKey=false)]
		[DataMember(Order=8, EmitDefaultValue=false)]
		public respuesta respuesta
		{
			get
			{
				if ((this.serializing 
							&& (this._respuesta.HasLoadedOrAssignedValue == false)))
				{
					return null;
				}
				return this._respuesta.Entity;
			}
			set
			{
				respuesta previousValue = this._respuesta.Entity;
				if (((previousValue != value) 
							|| (this._respuesta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._respuesta.Entity = null;
						previousValue.pregunta1 = null;
					}
					this._respuesta.Entity = value;
					if ((value != null))
					{
						value.pregunta1 = this;
					}
					this.SendPropertyChanged("respuesta");
				}
			}
		}
		
		[Association(Name="encuesta_pregunta", Storage="_encuesta", ThisKey="id_encuesta", IsForeignKey=true)]
		public encuesta encuesta
		{
			get
			{
				return this._encuesta.Entity;
			}
			set
			{
				encuesta previousValue = this._encuesta.Entity;
				if (((previousValue != value) 
							|| (this._encuesta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._encuesta.Entity = null;
						previousValue.preguntas.Remove(this);
					}
					this._encuesta.Entity = value;
					if ((value != null))
					{
						value.preguntas.Add(this);
						this._id_encuesta = value.nombre;
					}
					else
					{
						this._id_encuesta = default(string);
					}
					this.SendPropertyChanged("encuesta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_respuestas(respuesta entity)
		{
			this.SendPropertyChanging();
			entity.pregunta = this;
		}
		
		private void detach_respuestas(respuesta entity)
		{
			this.SendPropertyChanging();
			entity.pregunta = null;
		}
		
		private void Initialize()
		{
			this._respuestas = new EntitySet<respuesta>(new Action<respuesta>(this.attach_respuestas), new Action<respuesta>(this.detach_respuestas));
			this._respuesta = default(EntityRef<respuesta>);
			this._encuesta = default(EntityRef<encuesta>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[Table(Name="dbo.respuesta")]
	[DataContract()]
	public partial class respuesta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _contador;
		
		private string _texto;
		
		private int _id_pregunta;
		
		private System.Nullable<int> _id_proxima_pregunta;
		
		private EntityRef<pregunta> _pregunta;
		
		private EntityRef<pregunta> _pregunta1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncontadorChanging(int value);
    partial void OncontadorChanged();
    partial void OntextoChanging(string value);
    partial void OntextoChanged();
    partial void Onid_preguntaChanging(int value);
    partial void Onid_preguntaChanged();
    partial void Onid_proxima_preguntaChanging(System.Nullable<int> value);
    partial void Onid_proxima_preguntaChanged();
    #endregion
		
		public respuesta()
		{
			this.Initialize();
		}
		
		[Column(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					if (this._pregunta1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_contador", DbType="Int NOT NULL")]
		[DataMember(Order=2)]
		public int contador
		{
			get
			{
				return this._contador;
			}
			set
			{
				if ((this._contador != value))
				{
					this.OncontadorChanging(value);
					this.SendPropertyChanging();
					this._contador = value;
					this.SendPropertyChanged("contador");
					this.OncontadorChanged();
				}
			}
		}
		
		[Column(Storage="_texto", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string texto
		{
			get
			{
				return this._texto;
			}
			set
			{
				if ((this._texto != value))
				{
					this.OntextoChanging(value);
					this.SendPropertyChanging();
					this._texto = value;
					this.SendPropertyChanged("texto");
					this.OntextoChanged();
				}
			}
		}
		
		[Column(Storage="_id_pregunta", DbType="Int NOT NULL")]
		[DataMember(Order=4)]
		public int id_pregunta
		{
			get
			{
				return this._id_pregunta;
			}
			set
			{
				if ((this._id_pregunta != value))
				{
					if (this._pregunta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_preguntaChanging(value);
					this.SendPropertyChanging();
					this._id_pregunta = value;
					this.SendPropertyChanged("id_pregunta");
					this.Onid_preguntaChanged();
				}
			}
		}
		
		[Column(Storage="_id_proxima_pregunta", DbType="Int")]
		[DataMember(Order=5)]
		public System.Nullable<int> id_proxima_pregunta
		{
			get
			{
				return this._id_proxima_pregunta;
			}
			set
			{
				if ((this._id_proxima_pregunta != value))
				{
					this.Onid_proxima_preguntaChanging(value);
					this.SendPropertyChanging();
					this._id_proxima_pregunta = value;
					this.SendPropertyChanged("id_proxima_pregunta");
					this.Onid_proxima_preguntaChanged();
				}
			}
		}
		
		[Association(Name="pregunta_respuesta", Storage="_pregunta", ThisKey="id_pregunta", IsForeignKey=true)]
		public pregunta pregunta
		{
			get
			{
				return this._pregunta.Entity;
			}
			set
			{
				pregunta previousValue = this._pregunta.Entity;
				if (((previousValue != value) 
							|| (this._pregunta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pregunta.Entity = null;
						previousValue.respuestas.Remove(this);
					}
					this._pregunta.Entity = value;
					if ((value != null))
					{
						value.respuestas.Add(this);
						this._id_pregunta = value.id;
					}
					else
					{
						this._id_pregunta = default(int);
					}
					this.SendPropertyChanged("pregunta");
				}
			}
		}
		
		[Association(Name="pregunta_respuesta1", Storage="_pregunta1", ThisKey="id", IsForeignKey=true)]
		public pregunta pregunta1
		{
			get
			{
				return this._pregunta1.Entity;
			}
			set
			{
				pregunta previousValue = this._pregunta1.Entity;
				if (((previousValue != value) 
							|| (this._pregunta1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._pregunta1.Entity = null;
						previousValue.respuesta = null;
					}
					this._pregunta1.Entity = value;
					if ((value != null))
					{
						value.respuesta = this;
						this._id = value.id;
					}
					else
					{
						this._id = default(int);
					}
					this.SendPropertyChanged("pregunta1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._pregunta = default(EntityRef<pregunta>);
			this._pregunta1 = default(EntityRef<pregunta>);
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[Table(Name="dbo.rol")]
	[DataContract()]
	public partial class rol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private string _permiso;
		
		private EntitySet<usuario> _usuarios;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnpermisoChanging(string value);
    partial void OnpermisoChanged();
    #endregion
		
		public rol()
		{
			this.Initialize();
		}
		
		[Column(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[DataMember(Order=1)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_nombre", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		[DataMember(Order=2)]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[Column(Storage="_permiso", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		[DataMember(Order=3)]
		public string permiso
		{
			get
			{
				return this._permiso;
			}
			set
			{
				if ((this._permiso != value))
				{
					this.OnpermisoChanging(value);
					this.SendPropertyChanging();
					this._permiso = value;
					this.SendPropertyChanged("permiso");
					this.OnpermisoChanged();
				}
			}
		}
		
		[Association(Name="rol_usuario", Storage="_usuarios", OtherKey="id_rol")]
		[DataMember(Order=4, EmitDefaultValue=false)]
		public EntitySet<usuario> usuarios
		{
			get
			{
				if ((this.serializing 
							&& (this._usuarios.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._usuarios;
			}
			set
			{
				this._usuarios.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_usuarios(usuario entity)
		{
			this.SendPropertyChanging();
			entity.rol = this;
		}
		
		private void detach_usuarios(usuario entity)
		{
			this.SendPropertyChanging();
			entity.rol = null;
		}
		
		private void Initialize()
		{
			this._usuarios = new EntitySet<usuario>(new Action<usuario>(this.attach_usuarios), new Action<usuario>(this.detach_usuarios));
			OnCreated();
		}
		
		[OnDeserializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[OnSerializing()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[OnSerialized()]
		[System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
}
#pragma warning restore 1591
